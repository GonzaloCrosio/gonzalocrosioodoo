name: Client 1 Development

on:
  push:
    branches:
      - client1-dev
jobs:
  deploy:
    name: Deploy to Development Environment
    environment: development  
    runs-on: ubuntu-latest

    steps:
    - name: cancel previous runs
      uses: styfle/cancel-workflow-action@0.5.0
      with:
        access_token: ${{ github.token }}

    - name: checkout
      uses: actions/checkout@v2


#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: us-east-1

#     - name: Login to Portainer Client1 Dev Registry


#     - name: Build, tag, and push image to Amazon ECR
#       id: build-image
#       env:
#         CLIENT1_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#         CLIENT1_REPOSITORY: client1-development
#       run: |
#         docker build -t $CLIENT1_REGISTRY/$ECR_REPOSITORY:latest -t $CLIENT1_REGISTRY/$ECR_REPOSITORY:latest 
#         docker push $ECR_REGISTRY/$ECR_REPOSITORY --all-tags
#         echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:latest"

#     - name: Deploy in Portainer Container Engine
#       env:
#         PORTAINER_URL: development

#       run: |
#         aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --task-definition $ECS_TASK_DEFINITION --force-new-deployment 

        
#     - name: Notification
